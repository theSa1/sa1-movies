---
import Layout from "../../layouts/Layout.astro";
import type { Movie } from "../../types/movie";

const res = await fetch(
  `https://api.themoviedb.org/3/movie/${Astro.params.id}?api_key=${
    import.meta.env.PUBLIC_TMDB_API
  }&append_to_response=watch/providers,videos`
);

console.log(res.url);

const movie = (await res.json()) as Movie;

movie.poster_path = movie.poster_path
  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`
  : undefined;
movie.backdrop_path = movie.backdrop_path
  ? `https://image.tmdb.org/t/p/original${movie.backdrop_path}`
  : undefined;

const languageNames = new Intl.DisplayNames(["en"], {
  type: "language",
});

const directSearchProviders = [
  {
    name: "HD Today",
    link: "https://hdtoday.cc/search/" + movie.title.replaceAll(" ", "-"),
  },
  {
    name: "Soap2Day",
    link: `https://soap2day.sh/search/keyword/${encodeURI(movie.title)}`,
  },
  {
    name: "Kat Movies HD",
    link: `https://katmoviehd.cx/?s=${encodeURI(movie.title)}`,
  },
  {
    name: "All Movies Hub",
    link: `https://allmovieshub.guru/?s=${encodeURI(movie.title)}`,
  },
  {
    name: "The Movies Flix",
    link: `https://themoviesflix.ac/?s=${encodeURI(movie.title)}`,
  },
  {
    name: "Vega Movies",
    link: `https://vegamovies.rest/?s=${encodeURI(movie.title)}`,
  },
  {
    name: "2Embed Download",
    link: `https://2embed.org/download/${movie.id}`,
  },
  {
    name: "2Embed",
    link: `https://www.2embed.to/embed/tmdb/movie?id=${movie.id}`,
  },
  {
    name: "2Embed.org",
    link: `https://2embed.org/embed/${movie.id}`,
  },
  {
    name: "VidSrc",
    link: `https://vidsrc.me/embed/${movie.id}`,
  },
];

const getMovieTrailer = (
  videos: {
    type: string;
    official: boolean;
    site: string;
    key: string;
  }[]
) => {
  const trailers = videos.filter(
    (video) =>
      video.type === "Trailer" &&
      video.official === true &&
      video.site === "YouTube"
  );

  if (trailers.length <= 0) {
    return null;
  }

  return trailers[trailers.length - 1].key;
};

const trailer = getMovieTrailer(movie.videos.results);

const nFormatter = (num: number) => {
  const lookup = [
    { value: 1, symbol: "" },
    { value: 1e3, symbol: "k" },
    { value: 1e6, symbol: "M" },
    { value: 1e12, symbol: "T" },
    { value: 1e15, symbol: "P" },
    { value: 1e18, symbol: "E" },
  ];

  const rx = /\.0+$|(\.[0-9]*[1-9])0+$/;

  var item = lookup
    .slice()
    .reverse()
    .find(function (item) {
      return num >= item.value;
    });

  return item
    ? (num / item.value).toFixed(1).replace(rx, "$1") + item.symbol
    : "0";
};
---

<Layout title={`${movie.title} | Sa1 Movies`}>
  <div>
    <div
      class="absolute top-0 left-0 h-screen w-screen bg-black bg-opacity-80 z-20 hidden"
      id="trailer-player"
    >
      <button
        class="absolute top-5 right-5 font-mono btn btn-circle"
        id="trailer-close-btn"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
      <iframe
        src={`https://www.youtube.com/embed/${trailer}`}
        class="w-full h-full"
        title="YouTube video player"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowfullscreen></iframe>
    </div>
    <div
      class="absolute top-0 left-0 h-screen w-screen bg-black bg-opacity-80 z-20 hidden mt-0"
      id="movie-player"
    >
      <button
        class="absolute top-5 right-5 font-mono btn btn-circle"
        id="movie-close-btn"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
      <iframe
        src={`https://www.2embed.to/embed/tmdb/movie?id=${movie.id}`}
        class="w-full h-full"
        title="YouTube video player"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowfullscreen></iframe>
    </div>
  </div>

  <div class="grid place-items-center">
    <a href="/" class="font-semibold text-xl link">Home</a>
  </div>

  <div class="grid grid-cols-3 gap-7 xl:grid-cols-4">
    <div class="aspect-[14/6] col-span-3 card overflow-hidden">
      <img
        src={movie.backdrop_path}
        class="h-full object-cover object-center w-full"
      />
    </div>
    <div class="relative h-full card overflow-hidden hidden xl:block">
      <img class="absolute h-full w-full" src={movie.poster_path} />
    </div>
  </div>

  <div class="grid grid-cols-1 gap-7 lg:grid-cols-5">
    <div class="card bg-base-200 lg:col-span-3">
      <div class="card-body">
        <h1 class="card-title">{movie.title}</h1>
        <p class="card-text italic">{movie.tagline}</p>
        <p class="card-text">{movie.overview}</p>
        <div class="mt-4">
          {
            movie.genres.map((genre) => (
              <button class="px-2 py-1 rounded bg-base-300 mr-3">
                {genre.name}
              </button>
            ))
          }
        </div>
      </div>
    </div>

    <div class="card bg-base-200 lg:col-span-2">
      <div class="card-body">
        <div class="card-title">Where To Watch</div>
        {
          movie["watch/providers"].results["IN"]?.flatrate && (
            <p class="mt-2">Stream</p>
          )
        }
        <div class="gap-2 flex">
          {
            movie["watch/providers"].results["IN"]?.flatrate?.map(
              (provider) => (
                <img
                  src={`https://image.tmdb.org/t/p/original${provider.logo_path}`}
                  class="w-10 rounded"
                />
              )
            )
          }
        </div>
        {
          movie["watch/providers"].results["IN"]?.rent && (
            <p class="mt-2">Rent</p>
          )
        }
        <div class="gap-2 flex">
          {
            movie["watch/providers"].results["IN"]?.rent?.map((provider) => (
              <img
                src={`https://image.tmdb.org/t/p/original${provider.logo_path}`}
                class="w-10 rounded"
              />
            ))
          }
        </div>
        {movie["watch/providers"].results["IN"]?.buy && <p class="mt-2">Buy</p>}
        <div class="gap-2 flex">
          {
            movie["watch/providers"].results["IN"]?.buy?.map((provider) => (
              <img
                src={`https://image.tmdb.org/t/p/original${provider.logo_path}`}
                class="w-10 rounded"
              />
            ))
          }
        </div>

        <div class="space-y-2">
          {
            directSearchProviders.map((provider) => (
              <a
                target="_blank"
                rel="noopener noreferrer"
                href={provider.link}
                class="px-2 py-1 rounded bg-base-300 mr-3 inline-block"
              >
                {provider.name}
              </a>
            ))
          }
        </div>

        <div class="card-actions justify-end">
          <div class="btn-group">
            <button id="movie-open-btn" class="btn btn-primary"
              >Watch Now</button
            >
            <button id="trailer-open-btn" class="btn btn-outline"
              >Play Trailers</button
            >
          </div>
        </div>
      </div>
    </div>
  </div>

  <div
    class="stats stats-vertical shadow bg-base-200 w-full sm:stats-horizontal"
  >
    <div class="stat">
      <div class="stat-figure text-primary">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-8 w-8"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z"
            clip-rule="evenodd"></path>
        </svg>
      </div>
      <div class="stat-title">Revenue</div>
      <div class="stat-value text-primary">
        {movie.revenue ? nFormatter(movie.revenue) : "-"}
      </div>
    </div>
    <div class="stat">
      <div class="stat-figure text-primary">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-8 w-8"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
          ></path>
        </svg>
      </div>
      <div class="stat-value text-primary">
        {movie.budget ? nFormatter(movie.budget) : "-"}
      </div>
      <div class="stat-title">Budget</div>
    </div>
    <div class="stat">
      <div class="stat-title">Status</div>
      <div class="stat-value">{movie.status}</div>
      <div class="stat-desc">
        Relese Date: {movie.release_date}
      </div>
    </div>
    <div class="stat">
      <div class="stat-figure">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-8 w-8"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M7 2a1 1 0 011 1v1h3a1 1 0 110 2H9.578a18.87 18.87 0 01-1.724 4.78c.29.354.596.696.914 1.026a1 1 0 11-1.44 1.389c-.188-.196-.373-.396-.554-.6a19.098 19.098 0 01-3.107 3.567 1 1 0 01-1.334-1.49 17.087 17.087 0 003.13-3.733 18.992 18.992 0 01-1.487-2.494 1 1 0 111.79-.89c.234.47.489.928.764 1.372.417-.934.752-1.913.997-2.927H3a1 1 0 110-2h3V3a1 1 0 011-1zm6 6a1 1 0 01.894.553l2.991 5.982a.869.869 0 01.02.037l.99 1.98a1 1 0 11-1.79.895L15.383 16h-4.764l-.724 1.447a1 1 0 11-1.788-.894l.99-1.98.019-.038 2.99-5.982A1 1 0 0113 8zm-1.382 6h2.764L13 11.236 11.618 14z"
            clip-rule="evenodd"></path>
        </svg>
      </div>
      <div class="stat-value">{languageNames.of(movie.original_language)}</div>
      <div class="stat-title">Original Language</div>
    </div>
    <div class="stat">
      <div class="stat-figure text-success">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-8 w-8"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"
          ></path>
        </svg>
      </div>
      <div class="stat-title">Rating</div>
      <div class="stat-value text-success">{movie.vote_average || "-"}</div>
    </div>
    <div class="stat">
      <div class="stat-figure text-success">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-8 w-8"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z"
            clip-rule="evenodd"></path>
        </svg>
      </div>
      <div class="stat-value text-success">{movie.runtime || "-"}</div>
      <div class="stat-title">Runtime</div>
    </div>
  </div>
</Layout>

<script>
  const movieOpenBtn = document.getElementById("movie-open-btn");
  const moviePlayer = document.getElementById("movie-player");
  const movieCloseBtn = document.getElementById("movie-close-btn");

  movieOpenBtn?.addEventListener("click", () => {
    console.log("Open");
    moviePlayer?.classList.remove("hidden");
  });

  movieCloseBtn?.addEventListener("click", () => {
    console.log("Close");
    moviePlayer?.classList.add("hidden");
  });

  const trailerOpenBtn = document.getElementById("trailer-open-btn");
  const trailerCloseBtn = document.getElementById("trailer-close-btn");
  const trailerPlayer = document.getElementById("trailer-player");

  trailerOpenBtn?.addEventListener("click", () => {
    console.log("Open");
    trailerPlayer?.classList.remove("hidden");
  });

  trailerCloseBtn?.addEventListener("click", () => {
    console.log("Close");
    trailerPlayer?.classList.add("hidden");
  });
</script>
